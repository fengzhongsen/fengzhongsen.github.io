(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{424:function(a,e,s){"use strict";s.r(e);var t=s(2),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"一、cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、cookie"}},[a._v("#")]),a._v(" 一、Cookie")]),a._v(" "),e("h1",{attrs:{id:"二、storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、storage"}},[a._v("#")]),a._v(" 二、Storage")]),a._v(" "),e("p",[a._v("localStorage && sessionStorage")]),a._v(" "),e("h1",{attrs:{id:"三、indexeddb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、indexeddb"}},[a._v("#")]),a._v(" 三、IndexedDB")]),a._v(" "),e("h1",{attrs:{id:"四、浏览器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、浏览器缓存"}},[a._v("#")]),a._v(" 四、浏览器缓存")]),a._v(" "),e("h2",{attrs:{id:"_4-1-memory-cache-disk-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-memory-cache-disk-cache"}},[a._v("#")]),a._v(" 4.1 Memory Cache && Disk Cache")]),a._v(" "),e("ol",[e("li",[a._v("当前Tab请求的资源会优先放在 Memory Cache 中，当Tab关闭，缓存失效")]),a._v(" "),e("li",[a._v("当前Tab请求的资源过大时会优先放在 Disk Cache 中")])]),a._v(" "),e("h2",{attrs:{id:"_4-2-service-worker-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-service-worker-cache"}},[a._v("#")]),a._v(" 4.2 Service Worker Cache")]),a._v(" "),e("p",[a._v("PWA就是利用了 Service Worker Cache，Service Worker 需要先注册，然后在监听到 install 事件后可以开始缓存资源。当用户再次访问，如果命中缓存就拿缓存，如果没命中则发请求，然后缓存下来。")]),a._v(" "),e("h2",{attrs:{id:"_4-3-http-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-http-cache"}},[a._v("#")]),a._v(" 4.3 HTTP Cache")]),a._v(" "),e("p",[a._v("Http 缓存分为强缓存和协商缓存。优先级较高的是强缓存，在命中强缓存失败的情况下，才会走协商缓存。")]),a._v(" "),e("h3",{attrs:{id:"_4-3-1-强制缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-强制缓存"}},[a._v("#")]),a._v(" 4.3.1 强制缓存")]),a._v(" "),e("p",[a._v("强缓存中，当请求再次发出时，浏览器会根据第一次请求响应头中的 expires 和 cache-control 判断目标资源是否“命中”强缓存，若命中则直接从缓存中获取资源，不会再与服务端发生通信。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Expires: Wed, 11 Sep 2019 16:12:18 GMT\nCache-Control: max-age=3600, s-maxage=31536000\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"expires"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[a._v("#")]),a._v(" Expires")]),a._v(" "),e("p",[a._v("服务端绝对时间戳，再次请求时如果"),e("code",[a._v("浏览器本地时间 < Expires")]),a._v("，直接从缓存里读取资源")]),a._v(" "),e("h4",{attrs:{id:"cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[a._v("#")]),a._v(" Cache-Control")]),a._v(" "),e("p",[a._v("资源有效时间，Http1.1 提出，优先级高于 Expires\nmax-age 只允许客户端缓存\ns-maxage 允许中间代理服务器缓存，优先级高于 max-age\npublic 所有内容都将被缓存（客户端和代理服务器都可缓存）\nprivate 所有内容只有客户端可以缓存，Cache-Control 的默认取值\nno-cache 浏览器在使用缓存数据时，需要先确认一下数据是否还跟服务器保持一致\nno-store 所有内容都不会被缓存，不使用强制缓存，也不使用协商缓存")]),a._v(" "),e("h3",{attrs:{id:"_4-3-2-协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-协商缓存"}},[a._v("#")]),a._v(" 4.3.2 协商缓存")]),a._v(" "),e("p",[a._v("协商缓存机制下，浏览器需要向服务器去询问缓存的相关信息，进而判断是重新发起请求、下载完整的响应，还是从本地获取缓存的资源。如果服务端（304 Not Modified）即缓存资源未改动，资源会被重定向到浏览器缓存。")]),a._v(" "),e("h4",{attrs:{id:"last-modified-if-modified-since"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since"}},[a._v("#")]),a._v(" Last-Modified && If-Modified-Since")]),a._v(" "),e("ol",[e("li",[a._v("首次请求 Response Header")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Last-Modified: Fri, 27 Oct 2017 06:35:57 GMT\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[a._v("再次请求 Request Header")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("If-Modified-Since: Fri, 27 Oct 2017 06:35:57 GMT // Last-Modified 中的值\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("若资源未改动，返回304，则响应头不再携带 Last-Modified。")]),a._v(" "),e("blockquote",[e("p",[a._v("两个弊端：")]),a._v(" "),e("ol",[e("li",[a._v("编辑文件，但内容没变化，会被认为是修改过了")]),a._v(" "),e("li",[a._v("If-Modified-Since 是以秒为单位的，如果修改文件时间小于1秒，则无法判断出文件修改了")])])]),a._v(" "),e("h4",{attrs:{id:"etag-if-none-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-none-match"}},[a._v("#")]),a._v(" ETag && If-None-Match")]),a._v(" "),e("ol",[e("li",[a._v("首次请求 Response Header")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ETag: ETag: W/"2a3b-1602480f459"\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[a._v("再次请求 Request Header")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('If-None-Match: W/"2a3b-1602480f459" // ETag 中的值\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"push-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push-cache"}},[a._v("#")]),a._v(" Push Cache")]),a._v(" "),e("p",[a._v("Http2 的新特性")])])}),[],!1,null,null,null);e.default=r.exports}}]);