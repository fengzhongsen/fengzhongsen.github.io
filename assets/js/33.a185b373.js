(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{444:function(e,v,t){"use strict";t.r(v);var _=t(2),a=Object(_.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),v("ol",[v("li",[e._v("加载渲染过程：父 "),v("code",[e._v("beforeCreate")]),e._v(" -> 父 "),v("code",[e._v("created")]),e._v(" -> 父 "),v("code",[e._v("beforeMount")]),e._v("  -> 子 "),v("code",[e._v("beforeCreate")]),e._v(" -> 子 "),v("code",[e._v("created")]),e._v(" -> 子 "),v("code",[e._v("beforeMount")]),e._v(" -> 子 "),v("code",[e._v("mounted")]),e._v(" -> 父 "),v("code",[e._v("mounted")]),e._v("。")]),e._v(" "),v("li",[e._v("子组件更新过程：父 "),v("code",[e._v("beforeUpdate")]),e._v(" -> 子 "),v("code",[e._v("beforeUpdate")]),e._v(" -> 子 "),v("code",[e._v("updated")]),e._v(" -> 父 "),v("code",[e._v("updated")]),e._v("。")]),e._v(" "),v("li",[e._v("父自建更新过程：父 "),v("code",[e._v("beforeUpdate")]),e._v(" -> 父 "),v("code",[e._v("updated")]),e._v("。")]),e._v(" "),v("li",[e._v("销毁过程：父 "),v("code",[e._v("beforeDestroy")]),e._v(" -> 子 "),v("code",[e._v("beforeDestroy")]),e._v(" -> 子 "),v("code",[e._v("destroyed")]),e._v(" -> 父 "),v("code",[e._v("destroyed")]),e._v("。")])]),e._v(" "),v("h2",{attrs:{id:"组件通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[e._v("#")]),e._v(" 组件通信")]),e._v(" "),v("h3",{attrs:{id:"父子组件通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#父子组件通信"}},[e._v("#")]),e._v(" 父子组件通信")]),e._v(" "),v("ol",[v("li",[e._v("props + emit")]),e._v(" "),v("li",[e._v("$refs + $parent")]),e._v(" "),v("li",[e._v("provider + inject")])]),e._v(" "),v("h3",{attrs:{id:"兄弟组件通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#兄弟组件通信"}},[e._v("#")]),e._v(" 兄弟组件通信")]),e._v(" "),v("ol",[v("li",[e._v("vuex")]),e._v(" "),v("li",[e._v("eventBus")]),e._v(" "),v("li",[v("code",[e._v("$parent.$refs")])])]),e._v(" "),v("h2",{attrs:{id:"computed-vs-watch"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#computed-vs-watch"}},[e._v("#")]),e._v(" computed VS watch")]),e._v(" "),v("ol",[v("li",[e._v("computed 是计算一个新的属性，并将该属性挂载到 vue 实例上，而 watch 是监听已经存在且已挂载到 vue 实例伤的数据，所以用 watch 同样可以监听 computed 计算属性的变化。")]),e._v(" "),v("li",[e._v("computed 本质是一个惰性求值的观察者，具有缓存性，只有当依赖变化后第一次访问 computed 值才会重新计算。而 watch 则是当数据发生变化便会调用执行函数。")]),e._v(" "),v("li",[e._v("从使用场景上来说，computed 适用一个数据便诶对个数据影响，而 watch 适用一个数据影响多个数据。")])]),e._v(" "),v("h1",{attrs:{id:"vue3-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue3-0"}},[e._v("#")]),e._v(" Vue3.0")]),e._v(" "),v("h2",{attrs:{id:"优势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[e._v("#")]),e._v(" 优势")]),e._v(" "),v("ol",[v("li",[e._v("没有 this，没烦恼；")]),e._v(" "),v("li",[e._v("更好的类型推导能⼒（TypeScript）；")]),e._v(" "),v("li",[e._v("更友好的 Tree-shaking ⽀持（渐进式体验）；")]),e._v(" "),v("li",[e._v("更⼤的代码压缩空间；")]),e._v(" "),v("li",[e._v("更灵活的逻辑复⽤能⼒。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);